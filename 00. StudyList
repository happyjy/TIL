<<>> INDEX
<> Web
<> NetWork
<> JavaScript
<> FW
<> etc


---
<<>> Detail 

<> Web
# 브라우저 동작 방법(렌더링 되는 과정)
https://d2.naver.com/helloworld/59361

# actual DOM vs Virtual DOM
https://github.com/joshua1988/vuejs-seminar/blob/master/slides/vuejs-intermediate.pdf


<> NetWork
* 네트워크의 구성 및 구조, 접속, 자료 전송, 프로토콜, 네트워크 관리 등
(이유 : 웹프로그래머는 네트워크에서 실행되는 웹프로그램을 주로 만들기 때문에 프로그래밍 기술 외에 네트워크 관련 지식을 일정 수준 습득해야 한다. 
어플리케이션 프로그램을 만들 때는 운영체제나 컴퓨터 하드웨어 지식이 부족해도 되지만, 
웹프로그래밍을 할 때는 서버 시스템에 대한 지식이 일정 수준 필요하다.

따라서 네트워크에 대한 기본적인 이론과 지식이 필요하다. 
네트워크의 구성 및 구조, 접속, 자료 전송, 프로토콜, 네트워크 관리 등에 대한 지식이 필요하다. 
또한 컴퓨터의 운영체제나 데이터베이스(DB)에 대해서도 알아야 한다. 
웹 개발은 전반적인 부분에 대한 지식을 필요로 하므로 항상 새로운 언어 및 기술 이슈 등에 대해 빠르게 대처 할 수 있어야 한다.

# ref
-http://www.ditoday.com/articles/articles_view.html?idno=8579
)

<> JavaScript
# documents.createElement 생성 과정을 알 필요가 있겠음 
# synchronous(setTimeout, setInterval)
# server-side rendering &(react, vue)
# ajax & server connection 
#




<> FW
# Vue 기준으로 AngularJs, react, polymer 비교 
https://rubygarage.org/blog/best-javascript-frameworks-for-front-end

<> etc
# 리눅스 명령어

### keyword
* git, Sourcetree 원리
* gulp.js, webpack 원리
* manifest, service-worker
