<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
        <input type="text" id="myText1">
        <input type="text" id="myText2">
        <span type="text" id="myDomElement"></span>

        <script>
            function Binding(b){
                _this = this;
                this.elementBindings = [];
                this.value = b.object[b.property];

                this.valueGetter = function(){
                    return _this.value;
                }

                this.valueSetter = function(val){
                    _this.value = val;
                    for(var i=0; i<_this.elementBindings.length; i++){
                        var binding=_this.elementBindings[i];
                        binding.element[binding.attribute] = val;
                    }
                }

                // SUTDY POINT1 - view에서 model쪽으로 binding
                // * element: 이벤트 대상 el
                // * attribute: 값을 넣을 attr
                // * event: event type
                this.addBinding = function(element, attribute, event){
                    var binding = { element, attribute };

                    if(event){
                        element.addEventListener(event, function(event){
                            _this.valueSetter(element[attribute]);
                        });
                        binding.event = event
                    }
                    this.elementBindings.push(binding);
                    element[attribute] = _this.value;
                    return _this;
                }

                // STUDY POINT2 - model에서 value를 변동 시키는 binding
                // 아래 설정으로 obj객체에 getter, setter이 되고 
                // obj.a = 4156; 수식은 아래 설정으로 인해 this.valueSetter에서 설정이 된다.
                Object.defineProperty(b.object, b.property, {
                    get: this.valueGetter,
                    set: this.valueSetter
                });

                b.object[b.property] = this.value;
            }

            var obj = {a:123};
            var myInputElement1 = document.getElementById("myText1");
            var myInputElement2 = document.getElementById("myText2");
            var myDomElement = document.getElementById("myDomElement");

            new Binding({
                object: obj,
                property: "a"
            })
            .addBinding(myInputElement1, "value", "keyup")
            .addBinding(myInputElement2, "value", "keyup")
            .addBinding(myDomElement, "innerHTML");

            obj.a = 4156;

        </script>
</body>
</html>
